name: API Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: development
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies and wait-on
        run: |
          npm ci --include=dev
          npm install -g wait-on

      - name: Build (install dev deps if needed)
        run: |
          # ensure TypeScript test can run
          npm run build || true

      - name: Start Next.js production server in background
        run: |
          # Build already run above; start the production server for stability in CI
          # Bind to 0.0.0.0 so it's reachable on the runner network
          npm run start -- -p 3000 -H 0.0.0.0 > .next.log 2>&1 &
          echo "Started production server (background)"

      - name: Wait for Next.js to be ready
        run: |
          echo "Waiting up to 240s for http://0.0.0.0:3000 ..."
          npx wait-on http://0.0.0.0:3000 --timeout 240000 || (
            echo "‚ùå Server did not respond within 240s. Printing .dev.log tail for debugging:"
            tail -n 120 .dev.log || echo "No .dev.log found"
            exit 1
          )

      - name: Run API integration tests
        run: |
          echo "Running npm run test:api"
          npm run test:api

      - name: Show Next.js logs (if any)
        if: failure()
        run: |
          echo "---- .dev.log (tail) ----"
          [ -f .dev.log ] && tail -n 200 .dev.log || true
